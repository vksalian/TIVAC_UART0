//org.eclipse.debug.core.PREFERRED_DELEGATES/org.eclipse.cdt.debug.gdbjtag.launchConfigurationType=org.eclipse.cdt.debug.gdbjtag.core.dsfLaunchDelegate,debug,;
//org.eclipse.debug.core.PREFERRED_DELEGATES/org.eclipse.cdt.launch.applicationLaunchType=org.eclipse.cdt.dsf.gdb.launch.localCLaunch,debug,;org.eclipse.cdt.cdi.launch.localCLaunch,run,;
//org.eclipse.debug.core.PREFERRED_DELEGATES/org.eclipse.cdt.launch.attachLaunchType=org.eclipse.cdt.dsf.gdb.launch.attachCLaunch,debug,;
//org.eclipse.debug.core.PREFERRED_DELEGATES/org.eclipse.cdt.launch.postmortemLaunchType=org.eclipse.cdt.dsf.gdb.launch.coreCLaunch,debug,;
//org.eclipse.debug.core.PREFERRED_DELEGATES/org.eclipse.cdt.launch.remoteApplicationLaunchType=org.eclipse.rse.remotecdt.dsf.debug,debug,;
eclipse.preferences.version=1
org.eclipse.debug.core.USE_STEP_FILTERS=false
prefWatchExpressions=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?>\n<watchExpressions>\n    <expression enabled\="true" text\="dummy"/>\n    <expression enabled\="true" text\="_s_data"/>\n    <expression enabled\="true" text\="_e_data"/>\n    <expression enabled\="true" text\="_s_bss"/>\n    <expression enabled\="true" text\="_e_text"/>\n    <expression enabled\="true" text\="(uint32_t)&amp;_e_data"/>\n    <expression enabled\="true" text\="GRP( General Registers )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( r0 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( r1 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( r2 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( r3 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( r4 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( r5 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( r6 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( r7 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( r8 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( r9 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( r10 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( r11 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( r12 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( sp )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( lr )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( pc )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( xPSR )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d0 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d1 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d2 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d3 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d4 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d5 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d6 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d7 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d8 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d9 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d10 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d11 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d12 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d13 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d14 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( d15 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( fpscr )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( msp )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( psp )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( primask )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( basepri )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( faultmask )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( control )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( s0 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( s1 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( s2 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( s3 )"/>\n    <expression enabled\="true" text\="GRP( General Registers ).REG( s4 )"/>\n    <expression enabled\="true" text\="*((uint32_t *)(0xE000Ed04))"/>\n</watchExpressions>\n
